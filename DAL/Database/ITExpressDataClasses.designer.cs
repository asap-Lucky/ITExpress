#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="2-sem-gr-1")]
	public partial class ITExpressDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertConsultant(Consultant instance);
    partial void UpdateConsultant(Consultant instance);
    partial void DeleteConsultant(Consultant instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    #endregion
		
		public ITExpressDataClassesDataContext() : 
				base(global::DAL.Properties.Settings.Default._2_sem_gr_1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ITExpressDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITExpressDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITExpressDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITExpressDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Specialization> Specializations
		{
			get
			{
				return this.GetTable<Specialization>();
			}
		}
		
		public System.Data.Linq.Table<Consultant> Consultants
		{
			get
			{
				return this.GetTable<Consultant>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _Admin_UserName;
		
		private string _Admin_Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnAdmin_UserNameChanging(string value);
    partial void OnAdmin_UserNameChanged();
    partial void OnAdmin_PasswordChanging(string value);
    partial void OnAdmin_PasswordChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Admin_UserName
		{
			get
			{
				return this._Admin_UserName;
			}
			set
			{
				if ((this._Admin_UserName != value))
				{
					this.OnAdmin_UserNameChanging(value);
					this.SendPropertyChanging();
					this._Admin_UserName = value;
					this.SendPropertyChanged("Admin_UserName");
					this.OnAdmin_UserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Admin_Password
		{
			get
			{
				return this._Admin_Password;
			}
			set
			{
				if ((this._Admin_Password != value))
				{
					this.OnAdmin_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Admin_Password = value;
					this.SendPropertyChanged("Admin_Password");
					this.OnAdmin_PasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specialization")]
	public partial class Specialization
	{
		
		private string _Specialization_CodeLanguage;
		
		private string _Specialization_EndType;
		
		private string _Specialization_Description;
		
		private int _Specialization_ConsultantId;
		
		public Specialization()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialization_CodeLanguage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialization_CodeLanguage
		{
			get
			{
				return this._Specialization_CodeLanguage;
			}
			set
			{
				if ((this._Specialization_CodeLanguage != value))
				{
					this._Specialization_CodeLanguage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialization_EndType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialization_EndType
		{
			get
			{
				return this._Specialization_EndType;
			}
			set
			{
				if ((this._Specialization_EndType != value))
				{
					this._Specialization_EndType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialization_Description", DbType="VarChar(255)")]
		public string Specialization_Description
		{
			get
			{
				return this._Specialization_Description;
			}
			set
			{
				if ((this._Specialization_Description != value))
				{
					this._Specialization_Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialization_ConsultantId", DbType="Int NOT NULL")]
		public int Specialization_ConsultantId
		{
			get
			{
				return this._Specialization_ConsultantId;
			}
			set
			{
				if ((this._Specialization_ConsultantId != value))
				{
					this._Specialization_ConsultantId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultant")]
	public partial class Consultant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConsultantId;
		
		private string _Consultant_FirstName;
		
		private string _Consultant_LastName;
		
		private string _Consultant_Login;
		
		private string _Consultant_Password;
		
		private string _Consultant_Email;
		
		private int _Consultant_ZipCode;
		
		private string _Consultant_City;
		
		private string _Consultant_Address;
		
		private int _Consultant_PhoneNumber;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsultantIdChanging(int value);
    partial void OnConsultantIdChanged();
    partial void OnConsultant_FirstNameChanging(string value);
    partial void OnConsultant_FirstNameChanged();
    partial void OnConsultant_LastNameChanging(string value);
    partial void OnConsultant_LastNameChanged();
    partial void OnConsultant_LoginChanging(string value);
    partial void OnConsultant_LoginChanged();
    partial void OnConsultant_PasswordChanging(string value);
    partial void OnConsultant_PasswordChanged();
    partial void OnConsultant_EmailChanging(string value);
    partial void OnConsultant_EmailChanged();
    partial void OnConsultant_ZipCodeChanging(int value);
    partial void OnConsultant_ZipCodeChanged();
    partial void OnConsultant_CityChanging(string value);
    partial void OnConsultant_CityChanged();
    partial void OnConsultant_AddressChanging(string value);
    partial void OnConsultant_AddressChanged();
    partial void OnConsultant_PhoneNumberChanging(int value);
    partial void OnConsultant_PhoneNumberChanged();
    #endregion
		
		public Consultant()
		{
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultantId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ConsultantId
		{
			get
			{
				return this._ConsultantId;
			}
			set
			{
				if ((this._ConsultantId != value))
				{
					this.OnConsultantIdChanging(value);
					this.SendPropertyChanging();
					this._ConsultantId = value;
					this.SendPropertyChanged("ConsultantId");
					this.OnConsultantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_FirstName
		{
			get
			{
				return this._Consultant_FirstName;
			}
			set
			{
				if ((this._Consultant_FirstName != value))
				{
					this.OnConsultant_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Consultant_FirstName = value;
					this.SendPropertyChanged("Consultant_FirstName");
					this.OnConsultant_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_LastName
		{
			get
			{
				return this._Consultant_LastName;
			}
			set
			{
				if ((this._Consultant_LastName != value))
				{
					this.OnConsultant_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Consultant_LastName = value;
					this.SendPropertyChanged("Consultant_LastName");
					this.OnConsultant_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_Login
		{
			get
			{
				return this._Consultant_Login;
			}
			set
			{
				if ((this._Consultant_Login != value))
				{
					this.OnConsultant_LoginChanging(value);
					this.SendPropertyChanging();
					this._Consultant_Login = value;
					this.SendPropertyChanged("Consultant_Login");
					this.OnConsultant_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_Password
		{
			get
			{
				return this._Consultant_Password;
			}
			set
			{
				if ((this._Consultant_Password != value))
				{
					this.OnConsultant_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Consultant_Password = value;
					this.SendPropertyChanged("Consultant_Password");
					this.OnConsultant_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_Email
		{
			get
			{
				return this._Consultant_Email;
			}
			set
			{
				if ((this._Consultant_Email != value))
				{
					this.OnConsultant_EmailChanging(value);
					this.SendPropertyChanging();
					this._Consultant_Email = value;
					this.SendPropertyChanged("Consultant_Email");
					this.OnConsultant_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_ZipCode", DbType="Int NOT NULL")]
		public int Consultant_ZipCode
		{
			get
			{
				return this._Consultant_ZipCode;
			}
			set
			{
				if ((this._Consultant_ZipCode != value))
				{
					this.OnConsultant_ZipCodeChanging(value);
					this.SendPropertyChanging();
					this._Consultant_ZipCode = value;
					this.SendPropertyChanged("Consultant_ZipCode");
					this.OnConsultant_ZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_City", DbType="VarChar(50)")]
		public string Consultant_City
		{
			get
			{
				return this._Consultant_City;
			}
			set
			{
				if ((this._Consultant_City != value))
				{
					this.OnConsultant_CityChanging(value);
					this.SendPropertyChanging();
					this._Consultant_City = value;
					this.SendPropertyChanged("Consultant_City");
					this.OnConsultant_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Consultant_Address
		{
			get
			{
				return this._Consultant_Address;
			}
			set
			{
				if ((this._Consultant_Address != value))
				{
					this.OnConsultant_AddressChanging(value);
					this.SendPropertyChanging();
					this._Consultant_Address = value;
					this.SendPropertyChanged("Consultant_Address");
					this.OnConsultant_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_PhoneNumber", DbType="Int NOT NULL")]
		public int Consultant_PhoneNumber
		{
			get
			{
				return this._Consultant_PhoneNumber;
			}
			set
			{
				if ((this._Consultant_PhoneNumber != value))
				{
					this.OnConsultant_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Consultant_PhoneNumber = value;
					this.SendPropertyChanged("Consultant_PhoneNumber");
					this.OnConsultant_PhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Invitation", Storage="_Invitations", ThisKey="ConsultantId", OtherKey="Invitaiton_ConsultantId")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Message", Storage="_Messages", ThisKey="ConsultantId", OtherKey="Message_ConsultantId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Project", Storage="_Projects", ThisKey="ConsultantId", OtherKey="Project_ConsultantId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _Customer_FirstName;
		
		private string _Customer_LastName;
		
		private string _Customer_Login;
		
		private string _Customer_Password;
		
		private string _Customer_Email;
		
		private int _Customer_ZipCode;
		
		private string _Customer_City;
		
		private string _Customer_Address;
		
		private int _Customer_PhoneNumber;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomer_FirstNameChanging(string value);
    partial void OnCustomer_FirstNameChanged();
    partial void OnCustomer_LastNameChanging(string value);
    partial void OnCustomer_LastNameChanged();
    partial void OnCustomer_LoginChanging(string value);
    partial void OnCustomer_LoginChanged();
    partial void OnCustomer_PasswordChanging(string value);
    partial void OnCustomer_PasswordChanged();
    partial void OnCustomer_EmailChanging(string value);
    partial void OnCustomer_EmailChanged();
    partial void OnCustomer_ZipCodeChanging(int value);
    partial void OnCustomer_ZipCodeChanged();
    partial void OnCustomer_CityChanging(string value);
    partial void OnCustomer_CityChanged();
    partial void OnCustomer_AddressChanging(string value);
    partial void OnCustomer_AddressChanged();
    partial void OnCustomer_PhoneNumberChanging(int value);
    partial void OnCustomer_PhoneNumberChanged();
    #endregion
		
		public Customer()
		{
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_FirstName
		{
			get
			{
				return this._Customer_FirstName;
			}
			set
			{
				if ((this._Customer_FirstName != value))
				{
					this.OnCustomer_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Customer_FirstName = value;
					this.SendPropertyChanged("Customer_FirstName");
					this.OnCustomer_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_LastName
		{
			get
			{
				return this._Customer_LastName;
			}
			set
			{
				if ((this._Customer_LastName != value))
				{
					this.OnCustomer_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Customer_LastName = value;
					this.SendPropertyChanged("Customer_LastName");
					this.OnCustomer_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Login
		{
			get
			{
				return this._Customer_Login;
			}
			set
			{
				if ((this._Customer_Login != value))
				{
					this.OnCustomer_LoginChanging(value);
					this.SendPropertyChanging();
					this._Customer_Login = value;
					this.SendPropertyChanged("Customer_Login");
					this.OnCustomer_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Password
		{
			get
			{
				return this._Customer_Password;
			}
			set
			{
				if ((this._Customer_Password != value))
				{
					this.OnCustomer_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Customer_Password = value;
					this.SendPropertyChanged("Customer_Password");
					this.OnCustomer_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Email
		{
			get
			{
				return this._Customer_Email;
			}
			set
			{
				if ((this._Customer_Email != value))
				{
					this.OnCustomer_EmailChanging(value);
					this.SendPropertyChanging();
					this._Customer_Email = value;
					this.SendPropertyChanged("Customer_Email");
					this.OnCustomer_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ZipCode", DbType="Int NOT NULL")]
		public int Customer_ZipCode
		{
			get
			{
				return this._Customer_ZipCode;
			}
			set
			{
				if ((this._Customer_ZipCode != value))
				{
					this.OnCustomer_ZipCodeChanging(value);
					this.SendPropertyChanging();
					this._Customer_ZipCode = value;
					this.SendPropertyChanged("Customer_ZipCode");
					this.OnCustomer_ZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_City
		{
			get
			{
				return this._Customer_City;
			}
			set
			{
				if ((this._Customer_City != value))
				{
					this.OnCustomer_CityChanging(value);
					this.SendPropertyChanging();
					this._Customer_City = value;
					this.SendPropertyChanged("Customer_City");
					this.OnCustomer_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Address
		{
			get
			{
				return this._Customer_Address;
			}
			set
			{
				if ((this._Customer_Address != value))
				{
					this.OnCustomer_AddressChanging(value);
					this.SendPropertyChanging();
					this._Customer_Address = value;
					this.SendPropertyChanged("Customer_Address");
					this.OnCustomer_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_PhoneNumber", DbType="Int NOT NULL")]
		public int Customer_PhoneNumber
		{
			get
			{
				return this._Customer_PhoneNumber;
			}
			set
			{
				if ((this._Customer_PhoneNumber != value))
				{
					this.OnCustomer_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Customer_PhoneNumber = value;
					this.SendPropertyChanged("Customer_PhoneNumber");
					this.OnCustomer_PhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invitation", Storage="_Invitations", ThisKey="CustomerId", OtherKey="Invitation_CustomerId")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Message", Storage="_Messages", ThisKey="CustomerId", OtherKey="Message_CustomerId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Projects", ThisKey="CustomerId", OtherKey="Project_CustomerId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitation")]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvitationId;
		
		private string _Invitation_Content;
		
		private int _Invitation_CustomerId;
		
		private int _Invitaiton_ConsultantId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Consultant> _Consultant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvitationIdChanging(int value);
    partial void OnInvitationIdChanged();
    partial void OnInvitation_ContentChanging(string value);
    partial void OnInvitation_ContentChanged();
    partial void OnInvitation_CustomerIdChanging(int value);
    partial void OnInvitation_CustomerIdChanged();
    partial void OnInvitaiton_ConsultantIdChanging(int value);
    partial void OnInvitaiton_ConsultantIdChanged();
    #endregion
		
		public Invitation()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Consultant = default(EntityRef<Consultant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvitationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvitationId
		{
			get
			{
				return this._InvitationId;
			}
			set
			{
				if ((this._InvitationId != value))
				{
					this.OnInvitationIdChanging(value);
					this.SendPropertyChanging();
					this._InvitationId = value;
					this.SendPropertyChanged("InvitationId");
					this.OnInvitationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invitation_Content", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Invitation_Content
		{
			get
			{
				return this._Invitation_Content;
			}
			set
			{
				if ((this._Invitation_Content != value))
				{
					this.OnInvitation_ContentChanging(value);
					this.SendPropertyChanging();
					this._Invitation_Content = value;
					this.SendPropertyChanged("Invitation_Content");
					this.OnInvitation_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invitation_CustomerId", DbType="Int NOT NULL")]
		public int Invitation_CustomerId
		{
			get
			{
				return this._Invitation_CustomerId;
			}
			set
			{
				if ((this._Invitation_CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvitation_CustomerIdChanging(value);
					this.SendPropertyChanging();
					this._Invitation_CustomerId = value;
					this.SendPropertyChanged("Invitation_CustomerId");
					this.OnInvitation_CustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invitaiton_ConsultantId", DbType="Int NOT NULL")]
		public int Invitaiton_ConsultantId
		{
			get
			{
				return this._Invitaiton_ConsultantId;
			}
			set
			{
				if ((this._Invitaiton_ConsultantId != value))
				{
					if (this._Consultant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvitaiton_ConsultantIdChanging(value);
					this.SendPropertyChanging();
					this._Invitaiton_ConsultantId = value;
					this.SendPropertyChanged("Invitaiton_ConsultantId");
					this.OnInvitaiton_ConsultantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invitation", Storage="_Customer", ThisKey="Invitation_CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._Invitation_CustomerId = value.CustomerId;
					}
					else
					{
						this._Invitation_CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Invitation", Storage="_Consultant", ThisKey="Invitaiton_ConsultantId", OtherKey="ConsultantId", IsForeignKey=true)]
		public Consultant Consultant
		{
			get
			{
				return this._Consultant.Entity;
			}
			set
			{
				Consultant previousValue = this._Consultant.Entity;
				if (((previousValue != value) 
							|| (this._Consultant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultant.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._Consultant.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._Invitaiton_ConsultantId = value.ConsultantId;
					}
					else
					{
						this._Invitaiton_ConsultantId = default(int);
					}
					this.SendPropertyChanged("Consultant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageId;
		
		private string _Message_content;
		
		private int _Message_CustomerId;
		
		private int _Message_ConsultantId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Consultant> _Consultant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnMessage_contentChanging(string value);
    partial void OnMessage_contentChanged();
    partial void OnMessage_CustomerIdChanging(int value);
    partial void OnMessage_CustomerIdChanged();
    partial void OnMessage_ConsultantIdChanging(int value);
    partial void OnMessage_ConsultantIdChanged();
    #endregion
		
		public Message()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Consultant = default(EntityRef<Consultant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_content", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Message_content
		{
			get
			{
				return this._Message_content;
			}
			set
			{
				if ((this._Message_content != value))
				{
					this.OnMessage_contentChanging(value);
					this.SendPropertyChanging();
					this._Message_content = value;
					this.SendPropertyChanged("Message_content");
					this.OnMessage_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_CustomerId", DbType="Int NOT NULL")]
		public int Message_CustomerId
		{
			get
			{
				return this._Message_CustomerId;
			}
			set
			{
				if ((this._Message_CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessage_CustomerIdChanging(value);
					this.SendPropertyChanging();
					this._Message_CustomerId = value;
					this.SendPropertyChanged("Message_CustomerId");
					this.OnMessage_CustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_ConsultantId", DbType="Int NOT NULL")]
		public int Message_ConsultantId
		{
			get
			{
				return this._Message_ConsultantId;
			}
			set
			{
				if ((this._Message_ConsultantId != value))
				{
					if (this._Consultant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessage_ConsultantIdChanging(value);
					this.SendPropertyChanging();
					this._Message_ConsultantId = value;
					this.SendPropertyChanged("Message_ConsultantId");
					this.OnMessage_ConsultantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Message", Storage="_Customer", ThisKey="Message_CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._Message_CustomerId = value.CustomerId;
					}
					else
					{
						this._Message_CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Message", Storage="_Consultant", ThisKey="Message_ConsultantId", OtherKey="ConsultantId", IsForeignKey=true)]
		public Consultant Consultant
		{
			get
			{
				return this._Consultant.Entity;
			}
			set
			{
				Consultant previousValue = this._Consultant.Entity;
				if (((previousValue != value) 
							|| (this._Consultant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultant.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Consultant.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._Message_ConsultantId = value.ConsultantId;
					}
					else
					{
						this._Message_ConsultantId = default(int);
					}
					this.SendPropertyChanged("Consultant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectId;
		
		private string _Project_Description;
		
		private string _Project_Requirements;
		
		private decimal _Project_TotalSum;
		
		private decimal _Project_HourWage;
		
		private System.DateTime _Project_StartDate;
		
		private System.DateTime _Project_EndDate;
		
		private System.Nullable<int> _Project_TimeUsed;
		
		private int _Project_Status;
		
		private int _Project_CustomerId;
		
		private int _Project_ConsultantId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Consultant> _Consultant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnProject_DescriptionChanging(string value);
    partial void OnProject_DescriptionChanged();
    partial void OnProject_RequirementsChanging(string value);
    partial void OnProject_RequirementsChanged();
    partial void OnProject_TotalSumChanging(decimal value);
    partial void OnProject_TotalSumChanged();
    partial void OnProject_HourWageChanging(decimal value);
    partial void OnProject_HourWageChanged();
    partial void OnProject_StartDateChanging(System.DateTime value);
    partial void OnProject_StartDateChanged();
    partial void OnProject_EndDateChanging(System.DateTime value);
    partial void OnProject_EndDateChanged();
    partial void OnProject_TimeUsedChanging(System.Nullable<int> value);
    partial void OnProject_TimeUsedChanged();
    partial void OnProject_StatusChanging(int value);
    partial void OnProject_StatusChanged();
    partial void OnProject_CustomerIdChanging(int value);
    partial void OnProject_CustomerIdChanged();
    partial void OnProject_ConsultantIdChanging(int value);
    partial void OnProject_ConsultantIdChanged();
    #endregion
		
		public Project()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Consultant = default(EntityRef<Consultant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Project_Description
		{
			get
			{
				return this._Project_Description;
			}
			set
			{
				if ((this._Project_Description != value))
				{
					this.OnProject_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Project_Description = value;
					this.SendPropertyChanged("Project_Description");
					this.OnProject_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Requirements", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Project_Requirements
		{
			get
			{
				return this._Project_Requirements;
			}
			set
			{
				if ((this._Project_Requirements != value))
				{
					this.OnProject_RequirementsChanging(value);
					this.SendPropertyChanging();
					this._Project_Requirements = value;
					this.SendPropertyChanged("Project_Requirements");
					this.OnProject_RequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_TotalSum", DbType="Decimal(18,0) NOT NULL")]
		public decimal Project_TotalSum
		{
			get
			{
				return this._Project_TotalSum;
			}
			set
			{
				if ((this._Project_TotalSum != value))
				{
					this.OnProject_TotalSumChanging(value);
					this.SendPropertyChanging();
					this._Project_TotalSum = value;
					this.SendPropertyChanged("Project_TotalSum");
					this.OnProject_TotalSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_HourWage", DbType="Decimal(18,0) NOT NULL")]
		public decimal Project_HourWage
		{
			get
			{
				return this._Project_HourWage;
			}
			set
			{
				if ((this._Project_HourWage != value))
				{
					this.OnProject_HourWageChanging(value);
					this.SendPropertyChanging();
					this._Project_HourWage = value;
					this.SendPropertyChanged("Project_HourWage");
					this.OnProject_HourWageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime Project_StartDate
		{
			get
			{
				return this._Project_StartDate;
			}
			set
			{
				if ((this._Project_StartDate != value))
				{
					this.OnProject_StartDateChanging(value);
					this.SendPropertyChanging();
					this._Project_StartDate = value;
					this.SendPropertyChanged("Project_StartDate");
					this.OnProject_StartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime Project_EndDate
		{
			get
			{
				return this._Project_EndDate;
			}
			set
			{
				if ((this._Project_EndDate != value))
				{
					this.OnProject_EndDateChanging(value);
					this.SendPropertyChanging();
					this._Project_EndDate = value;
					this.SendPropertyChanged("Project_EndDate");
					this.OnProject_EndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_TimeUsed", DbType="Int")]
		public System.Nullable<int> Project_TimeUsed
		{
			get
			{
				return this._Project_TimeUsed;
			}
			set
			{
				if ((this._Project_TimeUsed != value))
				{
					this.OnProject_TimeUsedChanging(value);
					this.SendPropertyChanging();
					this._Project_TimeUsed = value;
					this.SendPropertyChanged("Project_TimeUsed");
					this.OnProject_TimeUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Status", DbType="Int NOT NULL")]
		public int Project_Status
		{
			get
			{
				return this._Project_Status;
			}
			set
			{
				if ((this._Project_Status != value))
				{
					this.OnProject_StatusChanging(value);
					this.SendPropertyChanging();
					this._Project_Status = value;
					this.SendPropertyChanged("Project_Status");
					this.OnProject_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_CustomerId", DbType="Int NOT NULL")]
		public int Project_CustomerId
		{
			get
			{
				return this._Project_CustomerId;
			}
			set
			{
				if ((this._Project_CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_CustomerIdChanging(value);
					this.SendPropertyChanging();
					this._Project_CustomerId = value;
					this.SendPropertyChanged("Project_CustomerId");
					this.OnProject_CustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ConsultantId", DbType="Int NOT NULL")]
		public int Project_ConsultantId
		{
			get
			{
				return this._Project_ConsultantId;
			}
			set
			{
				if ((this._Project_ConsultantId != value))
				{
					if (this._Consultant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_ConsultantIdChanging(value);
					this.SendPropertyChanging();
					this._Project_ConsultantId = value;
					this.SendPropertyChanged("Project_ConsultantId");
					this.OnProject_ConsultantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Customer", ThisKey="Project_CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._Project_CustomerId = value.CustomerId;
					}
					else
					{
						this._Project_CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultant_Project", Storage="_Consultant", ThisKey="Project_ConsultantId", OtherKey="ConsultantId", IsForeignKey=true)]
		public Consultant Consultant
		{
			get
			{
				return this._Consultant.Entity;
			}
			set
			{
				Consultant previousValue = this._Consultant.Entity;
				if (((previousValue != value) 
							|| (this._Consultant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultant.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Consultant.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._Project_ConsultantId = value.ConsultantId;
					}
					else
					{
						this._Project_ConsultantId = default(int);
					}
					this.SendPropertyChanged("Consultant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
